/*Query 1 - Used for first Insight*/

WITH t1 AS (SELECT *, First_name || '' || last_name AS Full_Name
        FROM customer)
  SELECT full_name, email, address, phone, city, country, Sum(amount) AS Total_Purchase
    fROM t1 
       JOIN address on address.address_id = t1.address_id
       JOIN City on City.City_id = address.city_id
       JOIN Country on Country.country_id = City.country_id
       JOIN Payment on Payment.Customer_id = t1.Customer_id
   GROUP BY 1, 2, 3, 4, 5, 6
   ORDER BY 7 DESC
   LIMIT 10;
 

/*Query 2 - Used for Second Insight*/

WITH t1 AS (SELECT c.name AS Genre, Count(customer.customer_id) AS Total_Rent
       From Category  c
	   JOIN Film_Category fc on fc. 
	   JOIN Film 
	   JOIN Inventory
	   JOIN Rental
	   JOIN Customer
	GROUP BY 1
	ORDER By 2 DESC),
  t2 AS (SELECT c. name AS Genre, SUM(p.amount) AS Total_Sales
      From category C
	  JOIN Film_Category
	  JOIN Film
	  JOIN Inventory
	  JOIN Rental
	  JOIN Payment
	 GROUP BY 1
	 ORDER BT 2 DESC)
SELECT t1.genre, t1.Total_Rent, t2.Total_Sales
fROM t1
JOIN t2
ON t1.genre = t2.genre;



/* Query 3 - Used for Third Insight*/
WITH t1 AS (
  SELECT employee.FirstName SalesPerson, Invoice.BillingCountry Country_name, SUM(Invoice.total) total_amt
   FROM Invoice join customer on invoice.customerId = customer.customerId
   join Employee on customer.supportRepId = employee.Employeeid
   GROUP BY 1,2
   ORDER BY 3 DESC), 
t2 AS (
   SELECT country_name, MAX(total_amt) totalamount
   FROM t1
   GROUP BY 1)

SELECT t1.salesperson, t1.country_name, t2.totalamount
FROM t1
JOIN t2 ON t1.country_name = t2.country_name AND t1.total_amt = t2.totalamount;


/* Query 4 - Used for fourth Insight */
SELECT Artistlevel, count(*), Sum(totalprice), avg(totalprice) from (
	SELECT Artist.Name, count(*) as Number_Of_Sale, InvoiceLine.UnitPrice, sum(InvoiceLine.Quantity * InvoiceLine.UnitPrice) as totalprice,
		 CASE WHEN sum(InvoiceLine.Quantity * InvoiceLine.UnitPrice)> 50 THEN 'Top Seller'
		 WHEN sum(InvoiceLine.Quantity * InvoiceLine.UnitPrice)> 20 THEN 'Moderate Seller'
		 ELSE 'Low Seller' END AS Artistlevel
	FROM Invoice
	Join  InvoiceLine on Invoice.InvoiceId = InvoiceLine.InvoiceId
	Join track on track.TrackId = InvoiceLine.TrackId
	Join Album on Album.AlbumId = Track.AlbumId
	Join Artist on Artist.ArtistId = Album.ArtistId
	GROUP by 1
	ORDER by 2 DESC
) GROUP by 1 ;

